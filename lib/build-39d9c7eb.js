"use strict";var e,i=require("./main-f694403f.js"),t=require("fs"),n=require("path");function s(s){return i.__awaiter(this,void 0,void 0,(function(){var a,r,o,c,l,u,d,f,m,g;return i.__generator(this,(function(h){switch(h.label){case 0:return a=i.Config.get("useWineToRun"),r=i.isLoadedAndActive("build-makensis-wine"),[4,i.findPackagePath("build-makensis-wine")];case 1:return o=h.sent()[0],c=[],(l=parseInt(String(i.Config.get("compilerOptions.verbosity"))))&&c.push("-V"+l),i.Config.get("compilerOptions.strictMode")&&c.push("-WX"),g={name:s.scriptFile},a&&r?(d=n.resolve(o,"lib","makensis-wine.sh"),[3,4]):[3,2];case 2:return[4,i.getMakensisPath()];case 3:d=h.sent(),h.label=4;case 4:return g.cmd=d,g.sh=a&&r,g.args=i.__spreadArray(i.__spreadArray([],c),["{FILE_ACTIVE}"]),g.cwd="{FILE_ACTIVE_PATH}",g.errorMatch='(\\r?\\n)(?<message>.+)(\\r?\\n)Error in script "(?<file>[^"]+)" on line (?<line>\\d+) -- aborting creation process',g.warningMatch="[^!]warning: (?<message>.*) \\((?<file>(\\w{1}:)?[^:]+):(?<line>\\d+)\\)",u=g,"yaml"!==s.syntax?[3,6]:[4,Promise.resolve().then((function(){return require("./index-a4ce64ef.js")})).then((function(e){return e.index}))];case 5:e=h.sent(),h.label=6;case 6:f="yaml"===s.syntax?e.stringify(u):JSON.stringify(u,null,2),h.label=7;case 7:return h.trys.push([7,9,,10]),[4,t.promises.writeFile(s.filePath,f,"utf-8")];case 8:return h.sent(),[3,10];case 9:return m=h.sent(),console.log(m),atom.notifications.addError("Failed to write "+s.fileName,{detail:m,dismissable:!1}),[2];case 10:return[4,atom.workspace.open(s.filePath)];case 11:return h.sent(),[2]}}))}))}require("os"),require("child_process"),require("atom"),exports.createBuildFile=function(){var e,t;return i.__awaiter(this,void 0,void 0,(function(){var a,r,o,c,l,u,d,f,m,g,h;return i.__generator(this,(function(p){switch(p.label){case 0:return(a=atom.workspace.getActiveTextEditor())?"source.nsis"!==a.getGrammar().scopeName?(atom.notifications.addWarning("Unsupported document type",{dismissable:!1}),[2]):(r=a.getPath(),i.Config.get("processHeaders")&&i.isHeaderFile(r)?(o=atom.notifications.addWarning("Creating build-files for headers is blocked by default. You can allow this in the package settings.",{dismissable:!0,buttons:[{text:"Open Settings",className:"icon icon-gear",onDidClick:function(){return i.__awaiter(this,void 0,void 0,(function(){return i.__generator(this,(function(e){switch(e.label){case 0:return o.dismiss(),[4,atom.workspace.open("atom://config/packages/language-nsis",{pending:!0,searchAllPanes:!0})];case 1:return e.sent(),[2]}}))}))}},{text:"Cancel",onDidClick:function(){o.dismiss()}}]}),atom.beep(),[2]):(c=(null===(t=null===(e=atom.workspace)||void 0===e?void 0:e.getActiveTextEditor())||void 0===t?void 0:t.getPath())||null)?(u=n.basename(c),d=n.dirname(c),f=String(i.Config.get("buildFileSyntax")),m=".atom-build."+f.toLowerCase(),g=n.join(d,m),[4,i.fileExists(g)]):(l=atom.notifications.addWarning("File not saved",{dismissable:!0,detail:"You need to save this file manually before you can create a build-file",buttons:[{text:"OK",onDidClick:function(){l.dismiss()}}]}),[2])):(atom.notifications.addWarning("No active editor",{dismissable:!1}),[2]);case 1:return p.sent()?h=atom.notifications.addWarning("File exists",{dismissable:!0,detail:"Do you really want to overwrite your existing build file?",buttons:[{text:"Overwrite",onDidClick:function(){return i.__awaiter(this,void 0,void 0,(function(){return i.__generator(this,(function(e){return h.dismiss(),s({script:u,syntax:f,fileName:m,filePath:g}),[2]}))}))}},{text:"Abort",onDidClick:function(){h.dismiss()}}]}):s({script:u,syntax:f,fileName:m,filePath:g}),[2]}}))}))};
