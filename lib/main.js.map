{"version":3,"sources":["../webpack/bootstrap",".././src/util.coffee","../external \"child_process\"","../external \"atom-read-manifest\"","../external \"os\"","../external \"makensis\"","../external \"fs\"","../external \"path\"",".././src/makensis.coffee",".././src/main.coffee","../external \"open\"","../external \"electron\"","../external \"atom-satisfy-dependencies\"","../external \"atom\"",".././src/build.coffee","../external \"cson-parser\"","../external \"yaml-js\"",".././src/lookup.coffee","../external \"atom-select-list\"",".././src/nlf.coffee","../external \"@nsis/nlf\"",".././src/runner.coffee"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Util","meta","readManifestSync","clearConsole","consolePanel","clear","error1","getConfig","console","detectOutfile","line","indexOf","exec","toString","atom","config","getMakensisPath","callback","pathToMakensis","spawn","which","length","stdout","on","data","path","trim","set","errorCode","notifications","addError","dismissable","getPrefix","platform","isWindowsCompatible","logCompilerFlags","output","showFlagsAsObject","stdOut","JSON","stringify","toLowerCase","addInfo","detail","raw","info","getCurrentWindow","openDevTools","notifyOnCompletion","type","openButton","outFile","buttons","cancelButton","notification","revealButton","text","className","onDidClick","dismiss","runInstaller","push","revealInstaller","addWarning","addSuccess","openSettings","options","pending","searchAllPanes","workspace","open","openURL","cmd","opn","url","F_OK","access","existsSync","shell","error","log","showItemInFolder","require","compile","strictMode","editor","scope","script","getActiveTextEditor","getPath","getGrammar","scopeName","endsWith","beep","startsWith","save","then","compilerArguments","hasWarning","makensis","prefix","includes","lineString","warn","stderr","showVersion","version","catch","showCompilerFlags","hdrInfo","json","showHelp","selectListView","cmdHelp","update","items","keys","satisfyDependencies","title","description","default","order","alwaysShowOutput","showBuildNotifications","allowHeaderCompilation","buildFileSyntax","enum","compilerOutput","useWineToRun","manageDependencies","subscriptions","activate","state","Build","CompositeDisposable","Lookup","Makensis","NLF","Runner","this","add","commands","NSIS:save-&-compile","NSIS:save-&-compile-strict","NSIS:show-version","NSIS:show-compiler-flags","NSIS:open-package-settings","NSIS:satisfy-package-dependencies","NSIS:create-.atom–build-file","createFile","NSIS:create-.atom–build-file-for-wine","NSIS:set-default-runner","NSIS:remove-default-runner","remove","NSIS:command-reference","init","toggle","NSIS:convert-language-file","convert","showPrompt","deactivate","ref","dispose","consumeConsolePanel","wine","buildFileBase","buildFilePath","currentFile","currentPath","fs","successMsg","getActivePaneItem","basename","confirm","message","detailedMessage","OK","dirname","join","constants","R_OK","buildFile","makeNsis","packageDir","pathToScript","sh","Overwrite","Abort","packages","getPackageDirPaths","args","cwd","errorMatch","warningMatch","dump","writeFile","SelectListView","emptyMessage","filterKeyForItem","item","elementForItem","element","html","document","createElement","innerHTML","didConfirmSelection","cancel","didCancelSelection","classList","destroy","panel","previouslyFocusedElement","focus","attach","activeElement","addModalPanel","reset","convertNLF","convertJSON","e","input","getText","parse","openNewFile","targetExt","extname","fileName","newFileName","getFileName","newTab","setText","runner","check","active","Use makensis","Cancel","notify","unset","resolvePackagePath","isPackageLoaded"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","{ readManifestSync } = require(\"atom-read-manifest\")\nmeta = readManifestSync()\n\nmodule.exports = Util =\n  clearConsole: (consolePanel) ->\n    try\n      consolePanel.clear()\n    catch\n      console.clear() if Util.getConfig(\"clearConsole\")\n\n  detectOutfile: (line) ->\n    if line.indexOf(\"Output: \\\"\") isnt -1\n      regex = /Output: \\\"(.*\\.exe)\\\"\\r?\\n/g\n      result = regex.exec(line.toString())\n\n      return result[1]\n\n    return \"\"\n\n  getConfig: (key = \"\") ->\n    if key?\n      return atom.config.get(\"#{meta.name}.#{key}\")\n\n    return atom.config.get(\"#{meta.name}\")\n\n  getMakensisPath: (callback) ->\n    { spawn } = require \"child_process\"\n\n    # If stored, return pathToMakensis\n    pathToMakensis = Util.getConfig(\"pathToMakensis\")\n    if pathToMakensis.length > 0 and pathToMakensis isnt \"makensis\"\n      return callback(pathToMakensis)\n\n    # Find makensis\n    which = spawn Util.which(), [\"makensis\"]\n\n    which.stdout.on \"data\", ( data ) ->\n      path = data.toString().trim()\n      atom.config.set(\"#{meta.name}.pathToMakensis\", path)\n      return callback(path)\n\n    which.on \"close\", ( errorCode ) ->\n      if errorCode > 0\n        atom.notifications.addError(\"**#{meta.name}**: makensis is not in your `PATH` [environmental variable](http://superuser.com/a/284351/195953)\", dismissable: true)\n\n  getPrefix: ->\n    { platform } = require \"os\"\n\n    if platform() is \"win32\"\n      return \"/\"\n\n    return \"-\"\n\n  isWindowsCompatible: ->\n    { platform } = require \"os\"\n\n    if platform() is \"win32\" or Util.getConfig(\"useWineToRun\") is true\n      return true\n\n    return false\n\n  logCompilerFlags: (output, showFlagsAsObject, consolePanel) ->\n    if showFlagsAsObject is true\n      stdOut = JSON.stringify output.stdout, null, 2\n    else\n      stdOut = output.stdout\n\n    if Util.getConfig(\"compilerOutput\").toLowerCase() is \"console\"\n      try\n        consolePanel.raw(stdOut)\n      catch\n        console.info stdOut\n        atom.getCurrentWindow().openDevTools()\n    else\n      atom.notifications.addInfo(\"**#{meta.name}**\", detail: stdOut, dismissable: true)\n\n  notifyOnCompletion: (type, openButton, outFile) ->\n    buttons = []\n    dismissable = false\n\n    if outFile\n      if openButton is \"Run\"\n        dismissable = true\n\n        openButton =\n          text: openButton\n          className: \"icon icon-playback-play\"\n          onDidClick: ->\n            notification.dismiss()\n            Util.runInstaller outFile\n\n        buttons.push openButton\n\n      revealButton =\n        text: \"Reveal\"\n        className: \"icon icon-location\"\n\n        onDidClick: ->\n          notification.dismiss()\n          Util.revealInstaller outFile\n\n      cancelButton =\n          text: \"Cancel\"\n\n          onDidClick: ->\n            notification.dismiss()\n\n      buttons.push revealButton\n      buttons.push cancelButton\n\n    if type is \"warning\"\n      notification = atom.notifications.addWarning(\n        \"Compiled with warnings\",\n        dismissable: dismissable,\n        buttons: buttons\n      )\n    else\n      notification = atom.notifications.addSuccess(\n        \"Compiled successfully\",\n        dismissable: dismissable,\n        buttons: buttons\n      )\n\n  openSettings: ->\n    options =\n      pending: true\n      searchAllPanes: true\n\n    atom.workspace.open(\"atom://config/packages/#{meta.name}\", options)\n\n  openURL: (cmd) ->\n    opn = require \"open\"\n    opn \"https://idleberg.github.io/NSIS.docset/Contents/Resources/Documents/html/Reference/#{cmd}.html?utm_source=atom&utm_content=reference\", { url: true }\n\n  revealInstaller: (outFile) ->\n    { access, existsSync, F_OK } = require \"fs\"\n    { shell } = require \"electron\"\n\n    access outFile, F_OK, (error) ->\n      return console.log error if error or outFile is \"\"\n\n      shell.showItemInFolder(outFile)\n\n  runInstaller: (outFile) ->\n    { exec, spawn } = require \"child_process\"\n    { platform } = require \"os\"\n\n    if platform() is \"win32\"\n      try\n        exec \"cmd /c \\\"#{outFile}\\\"\"\n      catch error\n        atom.notifications.addWarning(\"**#{meta.name}**\", detail: error, dismissable: true)\n\n    else if Util.getConfig(\"useWineToRun\") is true\n      try\n        spawn \"wine\", [ outFile ]\n      catch error\n        atom.notifications.addWarning(\"**#{meta.name}**\", detail: error, dismissable: true)\n\n  which: ->\n    { platform } = require \"os\"\n\n    if platform() is \"win32\"\n      return \"where\"\n\n    return \"which\"\n","module.exports = require(\"child_process\");","module.exports = require(\"atom-read-manifest\");","module.exports = require(\"os\");","module.exports = require(\"makensis\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","{ readManifestSync } = require(\"atom-read-manifest\")\nmeta = readManifestSync()\n\nmodule.exports = Makensis =\n  compile: (strictMode, consolePanel) ->\n    { spawn } = require \"child_process\"\n    { clearConsole, detectOutfile, getConfig, getMakensisPath, getPrefix, isWindowsCompatible, notifyOnCompletion } = require \"./util\"\n\n    editor = atom.workspace.getActiveTextEditor()\n    return atom.notifications.addWarning(\"**#{meta.name}**: No active editor\", dismissable: false) unless editor?\n\n    script = editor.getPath()\n    scope  = editor.getGrammar().scopeName\n\n    if getConfig(\"allowHeaderCompilation\") is false and script.endsWith \"nsh\"\n      notification = atom.notifications.addWarning(\n        \"Compiling header files is blocked by default. You can allow it in the package settings.\",\n        dismissable: true,\n        buttons: [\n          {\n            text: \"Open Settings\"\n            className: \"icon icon-gear\"\n            onDidClick: ->\n              atom.workspace.open(\"atom://config/packages/#{meta.name}\", {pending: true, searchAllPanes: true})\n              notification.dismiss()\n          }\n          {\n            text: \"Cancel\",\n            onDidClick: ->\n              notification.dismiss()\n          }\n        ]\n      )\n\n      return atom.beep()\n\n    if script? and scope.startsWith \"source.nsis\"\n      editor.save().then ->\n        getMakensisPath (pathToMakensis) ->\n          prefix = getPrefix()\n          compilerArguments = getConfig(\"compilerArguments\")\n\n          # only add WX flag if not already specified\n          if strictMode is true and !compilerArguments.includes(\"-WX\") and !compilerArguments.includes(\"/WX\")\n            compilerArguments.push \"#{prefix}WX\"\n          compilerArguments.push script\n\n          clearConsole(consolePanel)\n\n          # Let's go\n          makensis = spawn pathToMakensis, compilerArguments\n          hasWarning = false\n          outFile = \"\"\n\n          makensis.stdout.on \"data\", (line) ->\n            lineString = line.toString()\n\n            if hasWarning is false and line.indexOf(\"warning: \") isnt -1\n              hasWarning = true\n\n              try\n                consolePanel.warn(lineString) if getConfig(\"alwaysShowOutput\")\n              catch\n                console.warn lineString\n            else\n              try\n                consolePanel.log(lineString) if getConfig(\"alwaysShowOutput\")\n              catch\n                console.log lineString\n\n            if outFile is \"\"\n              outFile = detectOutfile line\n\n          makensis.stderr.on \"data\", (line) ->\n            lineString = line.toString()\n\n            try\n              consolePanel.error lineString\n            catch\n              console.error lineString\n\n          makensis.on \"close\", ( errorCode ) ->\n            if errorCode is 0\n              openButton = if isWindowsCompatible() is true then \"Run\" else \"\"\n\n              if hasWarning is true\n                return notifyOnCompletion(\"warning\", openButton, outFile) if getConfig(\"showBuildNotifications\")\n\n              return notifyOnCompletion(\"success\", openButton, outFile) if getConfig(\"showBuildNotifications\")\n\n            return atom.notifications.addError(\"Compile Error\", dismissable: false) if getConfig(\"showBuildNotifications\")\n    else\n      # Something went wrong\n      atom.beep()\n\n  showVersion: (consolePanel) ->\n    { spawn } = require \"child_process\"\n    { clearConsole, getConfig, getMakensisPath, getPrefix } = require \"./util\"\n    { version } = require \"makensis\"\n\n    getMakensisPath (pathToMakensis) ->\n      clearConsole(consolePanel)\n\n      version({pathToMakensis: pathToMakensis}).then((output) ->\n        if getConfig(\"compilerOutput\").toLowerCase() is \"console\"\n          try\n            consolePanel.log(\"makensis #{output.stdout} (#{pathToMakensis})\")\n          catch\n            console.info \"makensis #{output.stdout} (#{pathToMakensis})\"\n            atom.getCurrentWindow().openDevTools()\n        else\n          atom.notifications.addInfo(\"**#{meta.name}**\", detail: \"makensis #{output.stdout} (#{pathToMakensis})\", dismissable: true)\n\n        return\n      ).catch (output) ->\n        return console.error output\n\n  showCompilerFlags: (consolePanel) ->\n    { spawn } = require \"child_process\"\n    { clearConsole, getConfig, getMakensisPath, getPrefix, logCompilerFlags } = require \"./util\"\n    { hdrInfo } = require \"makensis\"\n\n    showFlagsAsObject = getConfig(\"showFlagsAsObject\")\n    flagFormat = \" (JSON)\" if showFlagsAsObject\n\n    getMakensisPath (pathToMakensis) ->\n      clearConsole(consolePanel)\n\n      hdrInfo({pathToMakensis: pathToMakensis, json: showFlagsAsObject}).then((output) ->\n        return logCompilerFlags(output, showFlagsAsObject, consolePanel)\n      ).catch (output) ->\n        # fallback for legacy NSIS\n        return logCompilerFlags(output, showFlagsAsObject, consolePanel)\n\n  showHelp: (selectListView) ->\n    { spawn } = require \"child_process\"\n    { clearConsole, getConfig, getMakensisPath, getPrefix, logCompilerFlags } = require \"./util\"\n    { cmdHelp } = require \"makensis\"\n\n    getMakensisPath (pathToMakensis) ->\n      cmdHelp('', {pathToMakensis: pathToMakensis, json: true}).then((output) ->\n        selectListView.update({items: Object.keys output.stdout})\n      ).catch (output) ->\n        # fallback for legacy NSIS\n        selectListView.update({items: Object.keys output.stdout})\n","{ getConfig, getPrefix, openSettings } = require \"./util\"\n{ readManifestSync } = require(\"atom-read-manifest\")\n{ satisfyDependencies } = require \"atom-satisfy-dependencies\"\n\nmeta = readManifestSync()\n\nmodule.exports = NsisCore =\n  config:\n    pathToMakensis:\n      title: \"Path To MakeNSIS\"\n      description: \"Specify the full path to `makensis`\"\n      type: \"string\"\n      default: \"makensis\"\n      order: 0\n    compilerArguments:\n      title: \"Compiler Arguments\"\n      description: \"Specify the default arguments for `makensis`, separated by commas ([see documentation](http://nsis.sourceforge.net/Docs/Chapter3.html#usage))\"\n      type: \"array\"\n      default: [\n        \"#{getPrefix()}V3\"\n      ]\n      items:\n        type: \"string\"\n      order: 1\n    alwaysShowOutput:\n      title: \"Always Show Output\"\n      description: \"Displays compiler output in console panel. When deactivated, it will only show on errors\"\n      type: \"boolean\"\n      default: true\n      order: 2\n    showBuildNotifications:\n      title: \"Show Build Notifications\"\n      description: \"Displays color-coded notifications that close automatically after 5 seconds\"\n      type: \"boolean\"\n      default: true\n      order: 3\n    clearConsole:\n      title: \"Clear Console\"\n      description: \"When `console-panel` isn't available, build logs will be printed using `console.log()`. This setting clears the console prior to building.\"\n      type: \"boolean\"\n      default: true\n      order: 4\n    allowHeaderCompilation:\n      title: \"Allow Header Compilation\"\n      description: \"By default, only `.nsi` files will be compiled. This setting enables it for `.nsh` files as well.\"\n      type: \"boolean\"\n      default: false\n      order: 5\n    showFlagsAsObject:\n      title: \"Show Flags as Object\"\n      description: \"Displays compiler flags as JSON\"\n      type: \"boolean\"\n      default: true\n      order: 6\n    buildFileSyntax:\n      title: \"Build File Syntax\"\n      description: \"Specify the default syntax for your build file (requires [build](https://atom.io/packages/build))\"\n      type: \"string\"\n      default: \"json\"\n      enum: [\n        {\n          value: \"cson\"\n          description: \"CSON\"\n        }\n        {\n          value: \"json\"\n          description: \"JSON\"\n        }\n        {\n          value: \"yaml\"\n          description: \"YAML\"\n        }\n      ]\n      order: 7\n    compilerOutput:\n      title: \"Compiler Output\"\n      description: \"Specify whether `makensis` outputs its version or compiler flags to notifications the console\"\n      type: \"string\"\n      default: \"notification\"\n      enum: [\n        {\n          value: \"notification\"\n          description: \"Notification\"\n        }\n        {\n          value: \"console\"\n          description: \"Console\"\n        }\n      ]\n      order: 8\n    useWineToRun:\n      title: \"Use Wine to run\"\n      description: \"When on a non-Windows platform, you can run compiled installers using [Wine](https://www.winehq.org/)\"\n      type: \"boolean\"\n      default: false\n      order: 9\n    manageDependencies:\n      title: \"Manage Dependencies\"\n      description: \"When enabled, third-party dependencies will be installed automatically\"\n      type: \"boolean\"\n      default: true\n      order: 10\n  subscriptions: null\n\n  activate: (state) ->\n    { CompositeDisposable } = require \"atom\"\n    Build = require \"./build\"\n    Lookup = require \"./lookup\"\n    Makensis = require \"./makensis\"\n    NLF = require \"./nlf\"\n    Runner = require \"./runner\"\n\n    # Events subscribed to in atom's system can be easily cleaned up with a CompositeDisposable\n    @subscriptions = new CompositeDisposable\n\n    # Register commands\n    @subscriptions.add atom.commands.add \"atom-workspace\", \"NSIS:save-&-compile\": => Makensis.compile(false, @consolePanel)\n    @subscriptions.add atom.commands.add \"atom-workspace\", \"NSIS:save-&-compile-strict\": => Makensis.compile(true, @consolePanel)\n    @subscriptions.add atom.commands.add \"atom-workspace\", \"NSIS:show-version\": => Makensis.showVersion(@consolePanel)\n    @subscriptions.add atom.commands.add \"atom-workspace\", \"NSIS:show-compiler-flags\": => Makensis.showCompilerFlags(@consolePanel)\n    @subscriptions.add atom.commands.add \"atom-workspace\", \"NSIS:open-package-settings\": -> openSettings()\n    @subscriptions.add atom.commands.add \"atom-workspace\", \"NSIS:satisfy-package-dependencies\": -> satisfyDependencies(meta.name)\n    @subscriptions.add atom.commands.add \"atom-workspace\", \"NSIS:create-.atom–build-file\": -> Build.createFile(false)\n    @subscriptions.add atom.commands.add \"atom-workspace\", \"NSIS:create-.atom–build-file-for-wine\": -> Build.createFile(true)\n    @subscriptions.add atom.commands.add \"atom-workspace\", \"NSIS:set-default-runner\": -> Runner.set()\n    @subscriptions.add atom.commands.add \"atom-workspace\", \"NSIS:remove-default-runner\": -> Runner.remove()\n    @subscriptions.add atom.commands.add \"atom-workspace\", \"NSIS:command-reference\": ->\n      Lookup.init()\n      Lookup.toggle()\n    @subscriptions.add atom.commands.add \"atom-workspace\", \"NSIS:convert-language-file\": -> NLF.convert()\n\n    satisfyDependencies(meta.name, { showPrompt: true }) if getConfig(\"manageDependencies\") is true\n\n  deactivate: ->\n    @subscriptions?.dispose()\n    @subscriptions = null\n\n  consumeConsolePanel: (@consolePanel) ->\n","module.exports = require(\"open\");","module.exports = require(\"electron\");","module.exports = require(\"atom-satisfy-dependencies\");","module.exports = require(\"atom\");","{ readManifestSync } = require(\"atom-read-manifest\")\nmeta = readManifestSync()\n\n# build - https://atom.io/packages/build\nmodule.exports = Build =\n  createFile: (wine) ->\n    fs = require \"fs\"\n    path = require \"path\"\n    { getConfig } = require \"./util\"\n\n    editor = atom.workspace.getActiveTextEditor()\n\n    unless editor?\n      atom.notifications.addWarning(\"**#{meta.name}**: No active editor\", dismissable: false)\n      return\n\n    if editor.getGrammar().scopeName isnt \"source.nsis\"\n      atom.notifications.addWarning(\"**#{meta.name}**: Unsupported document type\", dismissable: false)\n      return\n\n    createFile = false\n    currentPath = atom.workspace.getActivePaneItem().getPath()\n    currentFile = path.basename(currentPath)\n\n    if typeof currentPath is \"undefined\"\n      atom.confirm\n        message: \"File not saved\"\n        detailedMessage: \"You need to save this file before you can create a build-file\"\n        buttons:\n          \"OK\": -> return\n\n    else\n      successMsg = null\n      currentPath = path.dirname(currentPath)\n      buildFileSyntax = getConfig(\"buildFileSyntax\")\n\n      if buildFileSyntax is \"CSON\"\n        buildFileBase = \".atom-build.cson\"\n      else if buildFileSyntax is \"YAML\"\n        buildFileBase = \".atom-build.yml\"\n      else\n        buildFileBase = \".atom-build.json\"\n\n      buildFilePath = path.join(currentPath, buildFileBase)\n\n      fs.access \"#{buildFilePath}\", fs.constants.R_OK, (error) ->\n        if error is null\n          atom.confirm\n            message: \"File exists\"\n            detailedMessage: \"Do you really want to overwrite your existing build file?\"\n            buttons:\n              \"Overwrite\": ->\n                successMsg = \"Overwriting existing file\"\n                createFile = true\n              \"Abort\": ->\n                return\n        else\n          successMsg = \"Saving file\"\n          createFile = true\n\n        if createFile is true\n          if wine isnt true\n            makeNsis =\"makensis\"\n            sh = false\n          else\n            pathToScript = atom.config.get(\"build-makensis-wine.pathToScript\")\n            packageDir = atom.packages.getPackageDirPaths().toString()\n            makeNsis = if pathToScript then \"\\\"#{pathToScript}\\\"\" else path.join(packageDir, \"build-makensis-wine\", \"lib\", \"makensis-wine.sh\")\n            sh = true\n\n          buildFile =\n            name: \"#{currentFile}\",\n            cmd: makeNsis,\n            args: [ \"{FILE_ACTIVE}\" ],\n            sh: sh,\n            cwd: \"{FILE_ACTIVE_PATH}\",\n            errorMatch: \"(\\\\r?\\\\n)(?<message>.+)(\\\\r?\\\\n)Error in script \\\"(?<file>[^\\\"]+)\\\" on line (?<line>\\\\d+) -- aborting creation process\",\n            warningMatch: \"[^!]warning: (?<message>.*) \\\\((?<file>(\\\\w{1}:)?[^:]+):(?<line>\\\\d+)\\\\)\"\n\n          switch buildFileSyntax\n            when \"CSON\"\n              CSON = require \"cson-parser\"\n              stringify = CSON.stringify(buildFile, null, 2)\n            when \"YAML\"\n              YAML = require \"yaml-js\"\n              stringify = YAML.dump(buildFile)\n            else\n              stringify = JSON.stringify(buildFile, null, 2)\n\n          # Save build file\n          fs.writeFile buildFilePath, stringify, (error) ->\n            if error\n              atom.notifications.addError(buildFileBase, detail: error, dismissable: false)\n            else\n              atom.notifications.addInfo(buildFileBase, detail: successMsg, dismissable: false)\n              atom.workspace.open(buildFilePath)\n","module.exports = require(\"cson-parser\");","module.exports = require(\"yaml-js\");","SelectListView = require \"atom-select-list\"\n\nmodule.exports = Lookup =\n  init: ->\n    @selectListView = new SelectListView(\n      emptyMessage: \"No command matches your search.\"\n      items: []\n\n      filterKeyForItem: (item) -> item\n\n      elementForItem: (item) ->\n        element = document.createElement \"li\"\n        html = item\n        element.innerHTML = html\n        element\n\n      didConfirmSelection: (item) =>\n        { openURL } = require \"./util\"\n\n        @cancel()\n        openURL(item)\n\n      didCancelSelection: () =>\n        @cancel()\n    )\n\n    @selectListView.element.classList.add \"nsis-command-list\"\n\n  dispose: ->\n    @cancel()\n    @selectListView.destroy()\n\n  cancel: ->\n    if @panel?\n      @panel.destroy()\n\n    @panel = null\n\n    if @previouslyFocusedElement\n      @previouslyFocusedElement.focus()\n      @previouslyFocusedElement = null\n\n  attach: ->\n    @previouslyFocusedElement = document.activeElement\n\n    if not @panel?\n      @panel = atom.workspace.addModalPanel(item: @selectListView)\n\n    @selectListView.focus()\n    @selectListView.reset()\n\n  toggle: ->\n    if @panel?\n      @cancel()\n    else\n      { showHelp } = require \"./makensis\"\n\n      showHelp(@selectListView)\n      @attach()\n","module.exports = require(\"atom-select-list\");","NLF = require \"@nsis/nlf\"\n\nmodule.exports = NSISLanguageFile =\n  convert: ->\n    editor = atom.workspace.getActiveTextEditor()\n    return atom.beep() unless editor?\n\n    if editor.getGrammar().scopeName is \"source.nlf\"\n      @convertNLF editor\n    else if editor.getGrammar().scopeName is \"source.json\"\n      @convertJSON editor\n    else\n      atom.beep()\n\n  convertNLF: (editor) ->\n    try\n      input = editor.getText()\n      output = NLF.parse(input, { stringify: true })\n    catch e\n      console.error e\n      return atom.notifications.addError(\"Conversion Failed\", detail: e, dismissable: true)\n\n    @openNewFile(editor, output, \"json\")\n\n  convertJSON: (editor) ->\n    try\n      input = editor.getText()\n      output = NLF.stringify(input)\n    catch e\n      console.error e\n      return atom.notifications.addError(\"Conversion Failed\", detail: e, dismissable: true)\n\n    @openNewFile(editor, output, \"nlf\")\n\n  openNewFile: (editor, input, targetExt) ->\n    { basename, extname } = require \"path\"\n\n    fileName = editor.getFileName().toString()\n    newFileName = basename(fileName, extname(fileName))\n\n    atom.workspace.open(\"#{newFileName}.#{targetExt}\", { pending: true })\n      .then (newTab) ->\n        newTab.setText(input)\n\n      .catch (error) ->\n        atom.notifications.addError(error, dismissable: true)\n","module.exports = require(\"@nsis/nlf\");","{ readManifestSync } = require(\"atom-read-manifest\")\nmeta = readManifestSync()\n\n# atom runner - https://atom.io/packages/atom-runner\nmodule.exports = Runner =\n  runner: null\n\n  set: ->\n    @check()\n\n    if (typeof @runner.path != \"undefined\") and (@runner.active == true)\n      atom.confirm\n        message: \"Set default runner for NSIS\"\n        detailedMessage: \"To compile NSIS scripts inside Atom, you need to define a runner. Do you want to use makensis as default runner?\"\n        buttons:\n          \"Use makensis\": ->\n            atom.notifications.addSuccess(\"**#{meta.name}**: Set `runner.scopes.nsis` to 'makensis -'\", dismissable: false)\n            atom.config.set(\"runner.scopes.nsis\", \"makensis -\")\n          \"Cancel\": ->\n            atom.notifications.addWarning(\"**#{meta.name}**: Cancelled setting default runner\", dismissable: false)\n            return\n    else\n      @notify()\n\n  remove: ->\n    @check()\n\n    if (typeof @runner.path != \"undefined\") and (@runner.active == true)\n      atom.notifications.addSuccess(\"**#{meta.name}**: Unset `runner.scopes.nsis`\", dismissable: false)\n      atom.config.unset(\"runner.scopes.nsis\")\n    else\n      @notify()\n\n  notify: ->\n    atom.notifications.addWarning(\"**#{meta.name}**: [atom-runner](https://atom.io/packages/atom-runner) is not installed\", dismissable: false)\n\n  check: ->\n    @runner =\n      path: atom.packages.resolvePackagePath(\"atom-runner\")\n      active: atom.packages.isPackageLoaded(\"atom-runner\")\n"],"sourceRoot":""}