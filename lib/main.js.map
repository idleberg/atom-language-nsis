{"version":3,"sources":["../webpack/bootstrap",".././src/util.coffee","../external \"child_process\"","../external \"atom-read-manifest\"","../external \"os\"","../external \"makensis\"","../external \"fs\"","../external \"path\"",".././src/makensis.coffee",".././src/main.coffee","../external \"open\"","../external \"electron\"","../external \"atom-satisfy-dependencies\"","../external \"atom\"",".././src/build.coffee","../external \"cson-parser\"","../external \"yaml-js\"",".././src/lookup.coffee","../external \"atom-select-list\"",".././src/nlf.coffee","../external \"@nsis/nlf\"",".././src/runner.coffee"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","readManifestSync","meta","Util","clearConsole","consolePanel","clear","getConfig","console","detectOutfile","line","indexOf","exec","toString","atom","config","getMakensisPath","callback","spawn","pathToMakensis","length","which","stdout","on","data","path","trim","set","errorCode","notifications","addError","dismissable","getPrefix","platform","isWindowsCompatible","logCompilerFlags","output","showFlagsAsObject","stdOut","JSON","stringify","toLowerCase","addInfo","detail","raw","info","getCurrentWindow","openDevTools","notifyOnCompletion","type","openButton","outFile","buttons","text","className","onDidClick","notification","dismiss","runInstaller","push","revealButton","revealInstaller","cancelButton","addWarning","addSuccess","openSettings","options","pending","searchAllPanes","workspace","open","openURL","cmd","opn","url","access","existsSync","F_OK","shell","error","log","showItemInFolder","require","compile","strictMode","editor","getActiveTextEditor","script","getPath","scope","getGrammar","scopeName","endsWith","beep","startsWith","save","then","prefix","compilerArguments","includes","makensis","hasWarning","lineString","warn","stderr","showVersion","version","catch","showCompilerFlags","hdrInfo","json","showHelp","selectListView","cmdHelp","update","items","keys","satisfyDependencies","title","description","default","order","alwaysShowOutput","showBuildNotifications","allowHeaderCompilation","buildFileSyntax","enum","compilerOutput","useWineToRun","manageDependencies","subscriptions","activate","state","CompositeDisposable","Build","Lookup","Makensis","NLF","Runner","add","commands","createFile","remove","init","toggle","convert","showPrompt","deactivate","dispose","consumeConsolePanel","wine","fs","currentPath","getActivePaneItem","currentFile","basename","confirm","message","detailedMessage","successMsg","dirname","buildFileBase","buildFilePath","join","constants","R_OK","makeNsis","sh","pathToScript","packageDir","packages","getPackageDirPaths","buildFile","args","cwd","errorMatch","warningMatch","dump","writeFile","SelectListView","emptyMessage","filterKeyForItem","item","elementForItem","html","element","document","createElement","innerHTML","didConfirmSelection","cancel","didCancelSelection","classList","destroy","panel","previouslyFocusedElement","focus","attach","activeElement","addModalPanel","reset","convertNLF","convertJSON","input","getText","parse","e","openNewFile","targetExt","extname","newFileName","fileName","getFileName","newTab","setText","runner","check","active","notify","unset","resolvePackagePath","isPackageLoaded"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","{ readManifestSync } = require(\"atom-read-manifest\")\nmeta = readManifestSync()\n\nmodule.exports = Util =\n  clearConsole: (consolePanel) ->\n    try\n      consolePanel.clear()\n    catch\n      console.clear() if Util.getConfig(\"clearConsole\")\n\n  detectOutfile: (line) ->\n    if line.indexOf(\"Output: \\\"\") isnt -1\n      regex = /Output: \\\"(.*\\.exe)\\\"\\r?\\n/g\n      result = regex.exec(line.toString())\n\n      return result[1]\n\n    return \"\"\n\n  getConfig: (key = \"\") ->\n    if key?\n      return atom.config.get(\"#{meta.name}.#{key}\")\n\n    return atom.config.get(\"#{meta.name}\")\n\n  getMakensisPath: (callback) ->\n    { spawn } = require \"child_process\"\n\n    # If stored, return pathToMakensis\n    pathToMakensis = Util.getConfig(\"pathToMakensis\")\n    if pathToMakensis.length > 0 and pathToMakensis isnt \"makensis\"\n      return callback(pathToMakensis)\n\n    # Find makensis\n    which = spawn Util.which(), [\"makensis\"]\n\n    which.stdout.on \"data\", ( data ) ->\n      path = data.toString().trim()\n      atom.config.set(\"#{meta.name}.pathToMakensis\", path)\n      return callback(path)\n\n    which.on \"close\", ( errorCode ) ->\n      if errorCode > 0\n        atom.notifications.addError(\"**#{meta.name}**: makensis is not in your `PATH` [environmental variable](http://superuser.com/a/284351/195953)\", dismissable: true)\n\n  getPrefix: ->\n    { platform } = require \"os\"\n\n    if platform() is \"win32\"\n      return \"/\"\n\n    return \"-\"\n\n  isWindowsCompatible: ->\n    { platform } = require \"os\"\n\n    if platform() is \"win32\" or Util.getConfig(\"useWineToRun\") is true\n      return true\n\n    return false\n\n  logCompilerFlags: (output, showFlagsAsObject, consolePanel) ->\n    if showFlagsAsObject is true\n      stdOut = JSON.stringify output.stdout, null, 2\n    else\n      stdOut = output.stdout\n\n    if Util.getConfig(\"compilerOutput\").toLowerCase() is \"console\"\n      try\n        consolePanel.raw(stdOut)\n      catch\n        console.info stdOut\n        atom.getCurrentWindow().openDevTools()\n    else\n      atom.notifications.addInfo(\"**#{meta.name}**\", detail: stdOut, dismissable: true)\n\n  notifyOnCompletion: (type, openButton, outFile) ->\n    buttons = []\n    dismissable = false\n\n    if outFile\n      if openButton is \"Run\"\n        dismissable = true\n\n        openButton =\n          text: openButton\n          className: \"icon icon-playback-play\"\n          onDidClick: ->\n            notification.dismiss()\n            Util.runInstaller outFile\n\n        buttons.push openButton\n\n      revealButton =\n        text: \"Reveal\"\n        className: \"icon icon-location\"\n\n        onDidClick: ->\n          notification.dismiss()\n          Util.revealInstaller outFile\n\n      cancelButton =\n          text: \"Cancel\"\n\n          onDidClick: ->\n            notification.dismiss()\n\n      buttons.push revealButton\n      buttons.push cancelButton\n\n    if type is \"warning\"\n      notification = atom.notifications.addWarning(\n        \"Compiled with warnings\",\n        dismissable: dismissable,\n        buttons: buttons\n      )\n    else\n      notification = atom.notifications.addSuccess(\n        \"Compiled successfully\",\n        dismissable: dismissable,\n        buttons: buttons\n      )\n\n  openSettings: ->\n    options =\n      pending: true\n      searchAllPanes: true\n\n    atom.workspace.open(\"atom://config/packages/#{meta.name}\", options)\n\n  openURL: (cmd) ->\n    opn = require \"open\"\n    opn \"https://idleberg.github.io/NSIS.docset/Contents/Resources/Documents/html/Reference/#{cmd}.html?utm_source=atom&utm_content=reference\", { url: true }\n\n  revealInstaller: (outFile) ->\n    { access, existsSync, F_OK } = require \"fs\"\n    { shell } = require \"electron\"\n\n    access outFile, F_OK, (error) ->\n      return console.log error if error or outFile is \"\"\n\n      shell.showItemInFolder(outFile)\n\n  runInstaller: (outFile) ->\n    { exec, spawn } = require \"child_process\"\n    { platform } = require \"os\"\n\n    if platform() is \"win32\"\n      try\n        exec \"cmd /c \\\"#{outFile}\\\"\"\n      catch error\n        atom.notifications.addWarning(\"**#{meta.name}**\", detail: error, dismissable: true)\n\n    else if Util.getConfig(\"useWineToRun\") is true\n      try\n        spawn \"wine\", [ outFile ]\n      catch error\n        atom.notifications.addWarning(\"**#{meta.name}**\", detail: error, dismissable: true)\n\n  which: ->\n    { platform } = require \"os\"\n\n    if platform() is \"win32\"\n      return \"where\"\n\n    return \"which\"\n","module.exports = require(\"child_process\");","module.exports = require(\"atom-read-manifest\");","module.exports = require(\"os\");","module.exports = require(\"makensis\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","{ readManifestSync } = require(\"atom-read-manifest\")\nmeta = readManifestSync()\n\nmodule.exports = Makensis =\n  compile: (strictMode, consolePanel) ->\n    { spawn } = require \"child_process\"\n    { clearConsole, detectOutfile, getConfig, getMakensisPath, getPrefix, isWindowsCompatible, notifyOnCompletion } = require \"./util\"\n\n    editor = atom.workspace.getActiveTextEditor()\n    return atom.notifications.addWarning(\"**#{meta.name}**: No active editor\", dismissable: false) unless editor?\n\n    script = editor.getPath()\n    scope  = editor.getGrammar().scopeName\n\n    if getConfig(\"allowHeaderCompilation\") is false and script.endsWith \"nsh\"\n      notification = atom.notifications.addWarning(\n        \"Compiling header files is blocked by default. You can allow it in the package settings.\",\n        dismissable: true,\n        buttons: [\n          {\n            text: \"Open Settings\"\n            className: \"icon icon-gear\"\n            onDidClick: ->\n              atom.workspace.open(\"atom://config/packages/#{meta.name}\", {pending: true, searchAllPanes: true})\n              notification.dismiss()\n          }\n          {\n            text: \"Cancel\",\n            onDidClick: ->\n              notification.dismiss()\n          }\n        ]\n      )\n\n      return atom.beep()\n\n    if script? and scope.startsWith \"source.nsis\"\n      editor.save().then ->\n        getMakensisPath (pathToMakensis) ->\n          prefix = getPrefix()\n          compilerArguments = getConfig(\"compilerArguments\")\n\n          # only add WX flag if not already specified\n          if strictMode is true and !compilerArguments.includes(\"-WX\") and !compilerArguments.includes(\"/WX\")\n            compilerArguments.push \"#{prefix}WX\"\n          compilerArguments.push script\n\n          clearConsole(consolePanel)\n\n          # Let's go\n          makensis = spawn pathToMakensis, compilerArguments\n          hasWarning = false\n          outFile = \"\"\n\n          makensis.stdout.on \"data\", (line) ->\n            lineString = line.toString()\n\n            if hasWarning is false and line.indexOf(\"warning: \") isnt -1\n              hasWarning = true\n\n              try\n                consolePanel.warn(lineString) if getConfig(\"alwaysShowOutput\")\n              catch\n                console.warn lineString\n            else\n              try\n                consolePanel.log(lineString) if getConfig(\"alwaysShowOutput\")\n              catch\n                console.log lineString\n\n            if outFile is \"\"\n              outFile = detectOutfile line\n\n          makensis.stderr.on \"data\", (line) ->\n            lineString = line.toString()\n\n            try\n              consolePanel.error lineString\n            catch\n              console.error lineString\n\n          makensis.on \"close\", ( errorCode ) ->\n            if errorCode is 0\n              openButton = if isWindowsCompatible() is true then \"Run\" else \"\"\n\n              if hasWarning is true\n                return notifyOnCompletion(\"warning\", openButton, outFile) if getConfig(\"showBuildNotifications\")\n\n              return notifyOnCompletion(\"success\", openButton, outFile) if getConfig(\"showBuildNotifications\")\n\n            return atom.notifications.addError(\"Compile Error\", dismissable: false) if getConfig(\"showBuildNotifications\")\n    else\n      # Something went wrong\n      atom.beep()\n\n  showVersion: (consolePanel) ->\n    { spawn } = require \"child_process\"\n    { clearConsole, getConfig, getMakensisPath, getPrefix } = require \"./util\"\n    { version } = require \"makensis\"\n\n    getMakensisPath (pathToMakensis) ->\n      clearConsole(consolePanel)\n\n      version({pathToMakensis: pathToMakensis}).then((output) ->\n        if getConfig(\"compilerOutput\").toLowerCase() is \"console\"\n          try\n            consolePanel.log(\"makensis #{output.stdout} (#{pathToMakensis})\")\n          catch\n            console.info \"makensis #{output.stdout} (#{pathToMakensis})\"\n            atom.getCurrentWindow().openDevTools()\n        else\n          atom.notifications.addInfo(\"**#{meta.name}**\", detail: \"makensis #{output.stdout} (#{pathToMakensis})\", dismissable: true)\n\n        return\n      ).catch (output) ->\n        return console.error output\n\n  showCompilerFlags: (consolePanel) ->\n    { spawn } = require \"child_process\"\n    { clearConsole, getConfig, getMakensisPath, getPrefix, logCompilerFlags } = require \"./util\"\n    { hdrInfo } = require \"makensis\"\n\n    showFlagsAsObject = getConfig(\"showFlagsAsObject\")\n    flagFormat = \" (JSON)\" if showFlagsAsObject\n\n    getMakensisPath (pathToMakensis) ->\n      clearConsole(consolePanel)\n\n      hdrInfo({pathToMakensis: pathToMakensis, json: showFlagsAsObject}).then((output) ->\n        return logCompilerFlags(output, showFlagsAsObject, consolePanel)\n      ).catch (output) ->\n        # fallback for legacy NSIS\n        return logCompilerFlags(output, showFlagsAsObject, consolePanel)\n\n  showHelp: (selectListView) ->\n    { spawn } = require \"child_process\"\n    { clearConsole, getConfig, getMakensisPath, getPrefix, logCompilerFlags } = require \"./util\"\n    { cmdHelp } = require \"makensis\"\n\n    getMakensisPath (pathToMakensis) ->\n      cmdHelp('', {pathToMakensis: pathToMakensis, json: true}).then((output) ->\n        selectListView.update({items: Object.keys output.stdout})\n      ).catch (output) ->\n        # fallback for legacy NSIS\n        selectListView.update({items: Object.keys output.stdout})\n","{ getConfig, getPrefix, openSettings } = require \"./util\"\n{ readManifestSync } = require(\"atom-read-manifest\")\n{ satisfyDependencies } = require \"atom-satisfy-dependencies\"\n\nmeta = readManifestSync()\n\nmodule.exports = NsisCore =\n  config:\n    pathToMakensis:\n      title: \"Path To MakeNSIS\"\n      description: \"Specify the full path to `makensis`\"\n      type: \"string\"\n      default: \"makensis\"\n      order: 0\n    compilerArguments:\n      title: \"Compiler Arguments\"\n      description: \"Specify the default arguments for `makensis`, separated by commas ([see documentation](http://nsis.sourceforge.net/Docs/Chapter3.html#usage))\"\n      type: \"array\"\n      default: [\n        \"#{getPrefix()}V3\"\n      ]\n      items:\n        type: \"string\"\n      order: 1\n    alwaysShowOutput:\n      title: \"Always Show Output\"\n      description: \"Displays compiler output in console panel. When deactivated, it will only show on errors\"\n      type: \"boolean\"\n      default: true\n      order: 2\n    showBuildNotifications:\n      title: \"Show Build Notifications\"\n      description: \"Displays color-coded notifications that close automatically after 5 seconds\"\n      type: \"boolean\"\n      default: true\n      order: 3\n    clearConsole:\n      title: \"Clear Console\"\n      description: \"When `console-panel` isn't available, build logs will be printed using `console.log()`. This setting clears the console prior to building.\"\n      type: \"boolean\"\n      default: true\n      order: 4\n    allowHeaderCompilation:\n      title: \"Allow Header Compilation\"\n      description: \"By default, only `.nsi` files will be compiled. This setting enables compilation for `.nsh` files as well.\"\n      type: \"boolean\"\n      default: false\n      order: 5\n    showFlagsAsObject:\n      title: \"Show Flags as Object\"\n      description: \"Displays compiler flags as JSON\"\n      type: \"boolean\"\n      default: true\n      order: 6\n    buildFileSyntax:\n      title: \"Build File Syntax\"\n      description: \"Specify the default syntax for your build file (requires [build](https://atom.io/packages/build))\"\n      type: \"string\"\n      default: \"json\"\n      enum: [\n        {\n          value: \"cson\"\n          description: \"CSON\"\n        }\n        {\n          value: \"json\"\n          description: \"JSON\"\n        }\n        {\n          value: \"yaml\"\n          description: \"YAML\"\n        }\n      ]\n      order: 7\n    compilerOutput:\n      title: \"Compiler Output\"\n      description: \"Specify whether `makensis` outputs its version or compiler flags to notifications the console\"\n      type: \"string\"\n      default: \"notification\"\n      enum: [\n        {\n          value: \"notification\"\n          description: \"Notification\"\n        }\n        {\n          value: \"console\"\n          description: \"Console\"\n        }\n      ]\n      order: 8\n    useWineToRun:\n      title: \"Use Wine to run\"\n      description: \"When on a non-Windows platform, you can run compiled installers using [Wine](https://www.winehq.org/)\"\n      type: \"boolean\"\n      default: false\n      order: 9\n    manageDependencies:\n      title: \"Manage Dependencies\"\n      description: \"When enabled, third-party dependencies will be installed automatically\"\n      type: \"boolean\"\n      default: true\n      order: 10\n  subscriptions: null\n\n  activate: (state) ->\n    { CompositeDisposable } = require \"atom\"\n    Build = require \"./build\"\n    Lookup = require \"./lookup\"\n    Makensis = require \"./makensis\"\n    NLF = require \"./nlf\"\n    Runner = require \"./runner\"\n\n    # Events subscribed to in atom's system can be easily cleaned up with a CompositeDisposable\n    @subscriptions = new CompositeDisposable\n\n    # Register commands\n    @subscriptions.add atom.commands.add \"atom-workspace\", \"NSIS:save-&-compile\": => Makensis.compile(false, @consolePanel)\n    @subscriptions.add atom.commands.add \"atom-workspace\", \"NSIS:save-&-compile-strict\": => Makensis.compile(true, @consolePanel)\n    @subscriptions.add atom.commands.add \"atom-workspace\", \"NSIS:show-version\": => Makensis.showVersion(@consolePanel)\n    @subscriptions.add atom.commands.add \"atom-workspace\", \"NSIS:show-compiler-flags\": => Makensis.showCompilerFlags(@consolePanel)\n    @subscriptions.add atom.commands.add \"atom-workspace\", \"NSIS:open-package-settings\": -> openSettings()\n    @subscriptions.add atom.commands.add \"atom-workspace\", \"NSIS:satisfy-package-dependencies\": -> satisfyDependencies(meta.name)\n    @subscriptions.add atom.commands.add \"atom-workspace\", \"NSIS:create-.atom–build-file\": -> Build.createFile(false)\n    @subscriptions.add atom.commands.add \"atom-workspace\", \"NSIS:create-.atom–build-file-for-wine\": -> Build.createFile(true)\n    @subscriptions.add atom.commands.add \"atom-workspace\", \"NSIS:set-default-runner\": -> Runner.set()\n    @subscriptions.add atom.commands.add \"atom-workspace\", \"NSIS:remove-default-runner\": -> Runner.remove()\n    @subscriptions.add atom.commands.add \"atom-workspace\", \"NSIS:command-reference\": ->\n      Lookup.init()\n      Lookup.toggle()\n    @subscriptions.add atom.commands.add \"atom-workspace\", \"NSIS:convert-language-file\": -> NLF.convert()\n\n    satisfyDependencies(meta.name, { showPrompt: true }) if getConfig(\"manageDependencies\") is true\n\n  deactivate: ->\n    @subscriptions?.dispose()\n    @subscriptions = null\n\n  consumeConsolePanel: (@consolePanel) ->\n","module.exports = require(\"open\");","module.exports = require(\"electron\");","module.exports = require(\"atom-satisfy-dependencies\");","module.exports = require(\"atom\");","{ readManifestSync } = require(\"atom-read-manifest\")\nmeta = readManifestSync()\n\n# build - https://atom.io/packages/build\nmodule.exports = Build =\n  createFile: (wine) ->\n    fs = require \"fs\"\n    path = require \"path\"\n    { getConfig } = require \"./util\"\n\n    editor = atom.workspace.getActiveTextEditor()\n\n    unless editor?\n      atom.notifications.addWarning(\"**#{meta.name}**: No active editor\", dismissable: false)\n      return\n\n    if editor.getGrammar().scopeName isnt \"source.nsis\"\n      atom.notifications.addWarning(\"**#{meta.name}**: Unsupported document type\", dismissable: false)\n      return\n\n    createFile = false\n    currentPath = atom.workspace.getActivePaneItem().getPath()\n    currentFile = path.basename(currentPath)\n\n    if typeof currentPath is \"undefined\"\n      atom.confirm\n        message: \"File not saved\"\n        detailedMessage: \"You need to save this file before you can create a build-file\"\n        buttons:\n          \"OK\": -> return\n\n    else\n      successMsg = null\n      currentPath = path.dirname(currentPath)\n      buildFileSyntax = getConfig(\"buildFileSyntax\")\n\n      if buildFileSyntax is \"CSON\"\n        buildFileBase = \".atom-build.cson\"\n      else if buildFileSyntax is \"YAML\"\n        buildFileBase = \".atom-build.yml\"\n      else\n        buildFileBase = \".atom-build.json\"\n\n      buildFilePath = path.join(currentPath, buildFileBase)\n\n      fs.access \"#{buildFilePath}\", fs.constants.R_OK, (error) ->\n        if error is null\n          atom.confirm\n            message: \"File exists\"\n            detailedMessage: \"Do you really want to overwrite your existing build file?\"\n            buttons:\n              \"Overwrite\": ->\n                successMsg = \"Overwriting existing file\"\n                createFile = true\n              \"Abort\": ->\n                return\n        else\n          successMsg = \"Saving file\"\n          createFile = true\n\n        if createFile is true\n          if wine isnt true\n            makeNsis =\"makensis\"\n            sh = false\n          else\n            pathToScript = atom.config.get(\"build-makensis-wine.pathToScript\")\n            packageDir = atom.packages.getPackageDirPaths().toString()\n            makeNsis = if pathToScript then \"\\\"#{pathToScript}\\\"\" else path.join(packageDir, \"build-makensis-wine\", \"lib\", \"makensis-wine.sh\")\n            sh = true\n\n          buildFile =\n            name: \"#{currentFile}\",\n            cmd: makeNsis,\n            args: [ \"{FILE_ACTIVE}\" ],\n            sh: sh,\n            cwd: \"{FILE_ACTIVE_PATH}\",\n            errorMatch: \"(\\\\r?\\\\n)(?<message>.+)(\\\\r?\\\\n)Error in script \\\"(?<file>[^\\\"]+)\\\" on line (?<line>\\\\d+) -- aborting creation process\",\n            warningMatch: \"[^!]warning: (?<message>.*) \\\\((?<file>(\\\\w{1}:)?[^:]+):(?<line>\\\\d+)\\\\)\"\n\n          switch buildFileSyntax\n            when \"CSON\"\n              CSON = require \"cson-parser\"\n              stringify = CSON.stringify(buildFile, null, 2)\n            when \"YAML\"\n              YAML = require \"yaml-js\"\n              stringify = YAML.dump(buildFile)\n            else\n              stringify = JSON.stringify(buildFile, null, 2)\n\n          # Save build file\n          fs.writeFile buildFilePath, stringify, (error) ->\n            if error\n              atom.notifications.addError(buildFileBase, detail: error, dismissable: false)\n            else\n              atom.notifications.addInfo(buildFileBase, detail: successMsg, dismissable: false)\n              atom.workspace.open(buildFilePath)\n","module.exports = require(\"cson-parser\");","module.exports = require(\"yaml-js\");","SelectListView = require \"atom-select-list\"\n\nmodule.exports = Lookup =\n  init: ->\n    @selectListView = new SelectListView(\n      emptyMessage: \"No command matches your search.\"\n      items: []\n\n      filterKeyForItem: (item) -> item\n\n      elementForItem: (item) ->\n        element = document.createElement \"li\"\n        html = item\n        element.innerHTML = html\n        element\n\n      didConfirmSelection: (item) =>\n        { openURL } = require \"./util\"\n\n        @cancel()\n        openURL(item)\n\n      didCancelSelection: () =>\n        @cancel()\n    )\n\n    @selectListView.element.classList.add \"nsis-command-list\"\n\n  dispose: ->\n    @cancel()\n    @selectListView.destroy()\n\n  cancel: ->\n    if @panel?\n      @panel.destroy()\n\n    @panel = null\n\n    if @previouslyFocusedElement\n      @previouslyFocusedElement.focus()\n      @previouslyFocusedElement = null\n\n  attach: ->\n    @previouslyFocusedElement = document.activeElement\n\n    if not @panel?\n      @panel = atom.workspace.addModalPanel(item: @selectListView)\n\n    @selectListView.focus()\n    @selectListView.reset()\n\n  toggle: ->\n    if @panel?\n      @cancel()\n    else\n      { showHelp } = require \"./makensis\"\n\n      showHelp(@selectListView)\n      @attach()\n","module.exports = require(\"atom-select-list\");","NLF = require \"@nsis/nlf\"\n\nmodule.exports = NSISLanguageFile =\n  convert: ->\n    editor = atom.workspace.getActiveTextEditor()\n    return atom.beep() unless editor?\n\n    if editor.getGrammar().scopeName is \"source.nlf\"\n      @convertNLF editor\n    else if editor.getGrammar().scopeName is \"source.json\"\n      @convertJSON editor\n    else\n      atom.beep()\n\n  convertNLF: (editor) ->\n    try\n      input = editor.getText()\n      output = NLF.parse(input, { stringify: true })\n    catch e\n      console.error e\n      return atom.notifications.addError(\"Conversion Failed\", detail: e, dismissable: true)\n\n    @openNewFile(editor, output, \"json\")\n\n  convertJSON: (editor) ->\n    try\n      input = editor.getText()\n      output = NLF.stringify(input)\n    catch e\n      console.error e\n      return atom.notifications.addError(\"Conversion Failed\", detail: e, dismissable: true)\n\n    @openNewFile(editor, output, \"nlf\")\n\n  openNewFile: (editor, input, targetExt) ->\n    { basename, extname } = require \"path\"\n\n    fileName = editor.getFileName().toString()\n    newFileName = basename(fileName, extname(fileName))\n\n    atom.workspace.open(\"#{newFileName}.#{targetExt}\", { pending: true })\n      .then (newTab) ->\n        newTab.setText(input)\n\n      .catch (error) ->\n        atom.notifications.addError(error, dismissable: true)\n","module.exports = require(\"@nsis/nlf\");","{ readManifestSync } = require(\"atom-read-manifest\")\nmeta = readManifestSync()\n\n# atom runner - https://atom.io/packages/atom-runner\nmodule.exports = Runner =\n  runner: null\n\n  set: ->\n    @check()\n\n    if (typeof @runner.path != \"undefined\") and (@runner.active == true)\n      atom.confirm\n        message: \"Set default runner for NSIS\"\n        detailedMessage: \"To compile NSIS scripts inside Atom, you need to define a runner. Do you want to use makensis as default runner?\"\n        buttons:\n          \"Use makensis\": ->\n            atom.notifications.addSuccess(\"**#{meta.name}**: Set `runner.scopes.nsis` to 'makensis -'\", dismissable: false)\n            atom.config.set(\"runner.scopes.nsis\", \"makensis -\")\n          \"Cancel\": ->\n            atom.notifications.addWarning(\"**#{meta.name}**: Cancelled setting default runner\", dismissable: false)\n            return\n    else\n      @notify()\n\n  remove: ->\n    @check()\n\n    if (typeof @runner.path != \"undefined\") and (@runner.active == true)\n      atom.notifications.addSuccess(\"**#{meta.name}**: Unset `runner.scopes.nsis`\", dismissable: false)\n      atom.config.unset(\"runner.scopes.nsis\")\n    else\n      @notify()\n\n  notify: ->\n    atom.notifications.addWarning(\"**#{meta.name}**: [atom-runner](https://atom.io/packages/atom-runner) is not installed\", dismissable: false)\n\n  check: ->\n    @runner =\n      path: atom.packages.resolvePackagePath(\"atom-runner\")\n      active: atom.packages.isPackageLoaded(\"atom-runner\")\n"],"sourceRoot":""}